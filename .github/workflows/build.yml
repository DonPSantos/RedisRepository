name: Build and deploy nuget

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  PROJECT_PATH: 'RedisRepository/RedisRepository.csproj'
  PACKAGE_OUTPUT_DIRECTORY: ${{ github.workspace }}\output
  NUGET_SOURCE_URL: 'https://api.nuget.org/v3/index.json'

jobs:
  build:
  
    runs-on: ubuntu-latest
    outputs:
      semVer: ${{ steps.gitversion.outputs.semVer }} # To use an output in another job, you have to map it to a job output.

    steps:
    - uses: actions/checkout@v2
      with:
          fetch-depth: 0
    
    - name: Setup .NET 6
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 6.0.x 
        
    - name: Install GitVersion
      uses: gittools/actions/gitversion/setup@v0.9.7
      with:
        versionSpec: '5.x'
        
    - name: Determine Version
      id:   gitversion
      uses: gittools/actions/gitversion/execute@v0.9.7
            
    - name: Tag Repo
      uses: richardsimko/update-tag@v1
      with:
        tag_name: v${{ steps.gitversion.outputs.semVer }}
      env:
        GITHUB_TOKEN: ${{ secrets.NUGET_TOKEN }}
        
    - name: Restore dependencies
      run:  dotnet restore
          
    - name: Build dotnet 
      run: dotnet build RedisRepository.sln --configuration release /p:Version=${{ steps.gitversion.outputs.semVer }} /p:AssemblyVersion=${{ steps.gitversion.outputs.semVer }} /p:InformationalVersion=${{ steps.gitversion.outputs.InformationalVersion }} --no-restore
      
    - name: Package nuget
      run: dotnet pack RedisRepository.sln --configuration release -o:package /p:PackageVersion=${{ steps.gitversion.outputs.semVer }}

    - name: Push generated package to GitHub registry
      run: dotnet nuget push ./package/*.nupkg  -k ${{ secrets.NUGET_ORG_TOKEN }} --source "https://api.nuget.org/v3/index.json" --skip-duplicate

  create-github-release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs: build
    env:
      SEMVER: ${{ needs.build.outputs.semVer }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Create Release
        uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.NUGET_TOKEN }}"
          automatic_release_tag: "v${{ env.SEMVER }}"
          prerelease: false
          files: |
            LICENSE.txt